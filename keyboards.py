from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from aiogram.types import InlineKeyboardButton, KeyboardButton
from typing import List, Optional

def get_epoch_keyboard(with_back: bool = False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π —ç–ø–æ—Ö–∏."""
    builder = InlineKeyboardBuilder()
    builder.button(text="–†–æ—Å—Å–∏–π—Å–∫–∞—è –ò–º–ø–µ—Ä–∏—è (1721-1917)", callback_data="epoch_ri")
    builder.button(text="–°–°–°–† (1922-1991)", callback_data="epoch_ussr")
    builder.button(text="–†–æ—Å—Å–∏—è (1991-–Ω–∞—Å—Ç.–≤—Ä.)", callback_data="epoch_rf")
    builder.adjust(1)
    
    # –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    if with_back:
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_settings")
        builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
        builder.adjust(1, 2)  # –ü–µ—Ä–≤—ã–π —Ä—è–¥ - 1 –∫–Ω–æ–ø–∫–∞, –≤—Ç–æ—Ä–æ–π —Ä—è–¥ - 2 –∫–Ω–æ–ø–∫–∏
    
    return builder.as_markup()

def get_difficulty_keyboard(with_back: bool = False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏."""
    builder = InlineKeyboardBuilder()
    builder.button(text="–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã–π", callback_data="diff_basic")
    builder.button(text="–°—Ä–µ–¥–Ω–∏–π", callback_data="diff_medium")
    builder.button(text="–£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π", callback_data="diff_advanced")
    builder.adjust(1)
    
    # –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    if with_back:
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_settings")
        builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
        builder.adjust(1, 2)
    
    return builder.as_markup()

def get_schedule_keyboard(with_back: bool = False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ–≤."""
    builder = InlineKeyboardBuilder()
    builder.button(text="–î–∞, 3 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å", callback_data="schedule_yes")
    builder.button(text="–ù–µ—Ç, —á–∏—Ç–∞—Ç—å –∫–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ", callback_data="schedule_no")
    builder.adjust(1)
    
    # –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    if with_back:
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_settings")
        builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
        builder.adjust(1, 2)
    
    return builder.as_markup()

def get_main_menu_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    builder = ReplyKeyboardBuilder()
    builder.button(text="–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç")
    builder.button(text="–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å")
    builder.button(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    builder.button(text="–ü–æ–º–æ—â—å")
    builder.adjust(2)  # 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=False)

def get_settings_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
    builder = InlineKeyboardBuilder()
    builder.button(text="–ò–∑–º–µ–Ω–∏—Ç—å —ç–ø–æ—Ö—É", callback_data="settings_epoch")
    builder.button(text="–ò–∑–º–µ–Ω–∏—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç—å", callback_data="settings_difficulty")
    builder.button(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="settings_schedule")
    builder.button(text="–í—ã–±—Ä–∞—Ç—å —Ç–µ–º—ã", callback_data="settings_themes")
    builder.button(text="üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
    builder.adjust(1)
    return builder.as_markup()

def get_back_button():
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_settings")
    return builder.as_markup()

def get_themes_keyboard(with_back: bool = False, selected_themes: Optional[List[str]] = None):
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π.
    
    Args:
        with_back: –ï—Å–ª–∏ True, –¥–æ–±–∞–≤–∏—Ç –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        selected_themes: –°–ø–∏—Å–æ–∫ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–µ–º
    """
    if selected_themes is None:
        selected_themes = []
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–º—ã –∏ –∏—Ö callback_data
    themes = [
        ("–í–æ–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è", "theme_military"),
        ("–ö—É–ª—å—Ç—É—Ä–∞ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–æ", "theme_culture"),
        ("–ü–æ–ª–∏—Ç–∏–∫–∞", "theme_politics"),
        ("–≠–∫–æ–Ω–æ–º–∏–∫–∞", "theme_economy"),
        ("–ù–∞—É–∫–∞ –∏ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è", "theme_science"),
        ("–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è –∂–∏–∑–Ω—å", "theme_daily_life")
    ]
    
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Ç–µ–º–∞–º–∏, –æ—Ç–º–µ—á–∞—è –≤—ã–±—Ä–∞–Ω–Ω—ã–µ
    for theme_name, theme_id in themes:
        # –ï—Å–ª–∏ —Ç–µ–º–∞ –≤—ã–±—Ä–∞–Ω–∞, –¥–æ–±–∞–≤–ª—è–µ–º ‚úÖ –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∑–≤–∞–Ω–∏—è
        if theme_id.split('_')[1] in selected_themes:
            text = f"‚úÖ {theme_name}"
        else:
            text = theme_name
        
        builder.button(text=text, callback_data=theme_id)
    
    # –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    if with_back:
        builder.button(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä", callback_data="back_to_settings")
        builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
    
    builder.adjust(1)  # –û–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤ —Ä—è–¥—É
    return builder.as_markup()